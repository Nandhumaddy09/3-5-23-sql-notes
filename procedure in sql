create table car(
car_No int,car_name varchar(40),car_price int,car_quantity int);
select * from car;
insert into car values(121,'audi',1200000,2),(122,'tata',1300000,3),(132,'TESLA',3000000,1),
(143,'ferari',40000000,5),
(123,'shift',1200000,2),
(126,'tata',3400000,2);
select count(car_name),car_price from car group by car_price>1200000;

create table visit(
ENTRY_DATE DATE,PRICE INT,DURATION INT);
INSERT INTO VISIT VALUES('2023-5-1',1000,20),
('2023-05-2',2000,30),
('2023-05-2',4000,60),
('2023-06-10',5000,60),
('2023-07-10',5000,30);
SELECT * FROM VISIT;
SELECT ENTRY_DATE,COUNT(*) FROM VISIT GROUP BY ENTRY_DATE;
SELECT DURATION, COUNT(*) FROM VISIT GROUP BY DURATION;

-- EXTRACT KEYWORD EXAMOLES
SELECT EXTRACT(YEAR FROM ENTRY_DATE)AS YEAR, 
EXTRACT(MONTH FROM ENTRY_DATE)AS MONTH,
EXTRACT(DAY FROM ENTRY_DATE) AS DAY1,
ROUND (AVG(PRICE),2) FROM VISIT  
GROUP BY EXTRACT(YEAR FROM ENTRY_DATE),
EXTRACT(MONTH FROM ENTRY_DATE),
EXTRACT(DAY FROM ENTRY_DATE)
ORDER BY EXTRACT(YEAR FROM ENTRY_DATE),
EXTRACT(DAY FROM ENTRY_DATE);

SELECT * FROM VISIT;
SELECT PRICE,AVG(PRICE) AS AVG_PRICE FROM VISIT WHERE DURATION >=30
GROUP BY PRICE HAVING COUNT(*)>=2 ORDER BY PRICE;
INSERT INTO VISIT VALUES('2023-06-20',3000,45);



CRFEATE TABLE CUSTOMER(
CUSTOMER_ID INT PRIMARY KEY   

SELECT *  FROM CUSTOMER;
SELECT CITY,COUNT(*) AS CUSTOMER_CITY FROM CUSTOMER GROUP BY CITY;
SELECT ID ,COUNT(*) AS CUSTOMER_ID FROM CUSTOMER GROUP BY ID;

CREATE TABLE EMPLOYEE(
EMP_ID INT ,NAME VARCHAR(30),AGE INT,COUNTRY VARCHAR(30));
INSERT INTO EMPLOYEE VALUES (121,'MADHU',30,'INDIA'),
(123,'ABHI',45,'PAKISTHAN'),
(124,'MAHESH',35,'AMERICA'),
(343,'JAYA',56,'PARIS'),
(553,'KIRAN',76,'PARIS'),
(561,'PANDU',35,'INDIA'),
(344,'KAVYA',38,'AMERICA'),
(888,'JASWANTH',98,'INDIA'),
(989,'RAMU',88,'PARIS');

SELECT * FROM EMPLOYEE;

SELECT COUNT(COUNTRY),COUNTRY  FROM EMPLOYEE GROUP BY COUNTRY HAVING COUNT(COUNTRY)>=2;

SELECT COUNT(COUNTRY) AS COUNTRY_NUM,COUNTRY  FROM EMPLOYEE GROUP BY COUNTRY HAVING COUNT(COUNTRY)>=2;

SELECT COUNT(COUNTRY),COUNTRY  FROM EMPLOYEE GROUP BY COUNTRY HAVING COUNT(COUNTRY)>=2;

SELECT COUNTRY,COUNT(COUNTRY) FROM EMPLOYEE GROUP BY COUNTRY HAVING  MIN(AGE)>30;
SELECT COUNT(COUNTRY),COUNTRY  FROM EMPLOYEE GROUP BY COUNTRY HAVING COUNT(COUNTRY)>=2;

SELECT * FROM EMPLOYEE;

CREATE TABLE MANAGER(
ID INT,NAME VARCHAR(30),
GENDER VARCHAR(30),SALARY INT);
INSERT INTO MANAGER(;


CREATE TABLE MANAGER1(
ID INT,NAME VARCHAR(30),
GENDER VARCHAR(30),SALARY INT);


CREATE TABLE MANAGER3(
ID INT,NAME VARCHAR(30),
GENDER VARCHAR(30),SALARY INT, AGE INT);
INSERT INTO MANAGER3 VALUES(100,'MADHU','MALE',30000,30),
(123,'LOCHAN','MALE',40000,30),
(124,'RAVI','MALE',48000,34),
(125,'MAHESH','MALE',23000,24),
(232,'JAYA','MALE',200000,34);

SELECT * FROM MANAGER3;
SELECT NAME, SUM(SALARY)
 AS TOTAL_SALARY FROM MANAGER3 GROUP BY NAME HAVING SUM(SALARY)>23000 ORDER BY NAME;
 
 SELECT AGE, SUM(SALARY)
 AS TOTAL_SALARY FROM MANAGER3 GROUP BY AGE HAVING SUM(SALARY)>20000 ORDER BY AGE;
SELECT AGE ,COUNT(AGE) FROM MANAGER3 GROUP BY AGE HAVING AGE>30;

SELECT * FROM MANAGER3;

SELECT GENDER,MAX(SALARY) AS MIN_SALARY FROM MANAGER3 GROUP BY GENDER HAVING MIN(SALARY) < 100000;

delimiter //
CREATE PROCEDURE GETMANGERINFO()
 BEGIN
 select* from manager3;
 END //
 
 
 CALL GETMANAGERINFO()
 
 
 DELIMITER // 
CREATE PROCEDURE GetManagerInfo()
  BEGIN
	select * from MANAGER3;
  END //

CALL GetManagerInfo()


DELIMITER // 
CREATE PROCEDURE GetManagerInfo()
  BEGIN
	select * from MANAGER3;
  END //

CALL GetManagerInfo()

DELIMITER // 
CREATE PROCEDURE GetManagerInfo()
BEGIN
select * from manager3;
END //

CALL GetManagerInfo()



DELIMITER // 
CREATE PROCEDURE GetManageroF()
  BEGIN
	select * from MANAGER3;
  END //

CALL GetManageroF();

DELIMITER // 
CREATE PROCEDURE GetManagerAGE()
  BEGIN
	select * from MANAGER3 WHERE AGE=30;
  END //

CALL GetManagerAGE();

DELIMITER // 
CREATE PROCEDURE GetManagAGE1()
  BEGIN
	select * from MANAGER3 WHERE AGE=30;
  END //

CALL GetManagAGE1();

SELECT NAME FROM MANAGER3 ORDER BY RAND() LIMIT 2;







